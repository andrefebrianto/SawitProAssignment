// Code generated by MockGen. DO NOT EDIT.
// Source: password/interfaces.go

// Package password is a generated GoMock package.
package password

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPasswordInterface is a mock of PasswordInterface interface.
type MockPasswordInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPasswordInterfaceMockRecorder
}

// MockPasswordInterfaceMockRecorder is the mock recorder for MockPasswordInterface.
type MockPasswordInterfaceMockRecorder struct {
	mock *MockPasswordInterface
}

// NewMockPasswordInterface creates a new mock instance.
func NewMockPasswordInterface(ctrl *gomock.Controller) *MockPasswordInterface {
	mock := &MockPasswordInterface{ctrl: ctrl}
	mock.recorder = &MockPasswordInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPasswordInterface) EXPECT() *MockPasswordInterfaceMockRecorder {
	return m.recorder
}

// GenerateFromPassword mocks base method.
func (m *MockPasswordInterface) GenerateFromPassword(password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateFromPassword", password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateFromPassword indicates an expected call of GenerateFromPassword.
func (mr *MockPasswordInterfaceMockRecorder) GenerateFromPassword(password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateFromPassword", reflect.TypeOf((*MockPasswordInterface)(nil).GenerateFromPassword), password)
}

// VerifyPassword mocks base method.
func (m *MockPasswordInterface) VerifyPassword(hashedPassword, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyPassword", hashedPassword, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyPassword indicates an expected call of VerifyPassword.
func (mr *MockPasswordInterfaceMockRecorder) VerifyPassword(hashedPassword, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyPassword", reflect.TypeOf((*MockPasswordInterface)(nil).VerifyPassword), hashedPassword, password)
}
