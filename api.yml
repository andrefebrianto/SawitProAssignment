# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /users/registrations:
    post:
      summary: Register new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '200':
          description: The ID of created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /users/login:
    post:
      summary: Authenticate user credential
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: The ID of user and access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  
  /users/profile:
    get:
      summary: Get current user profile
      operationId: getUserProfile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
    put:
      summary: Update current user profile
      operationId: updateUserProfile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: Current user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'

components:
  responses:
    BadRequest:
      description: Invalid input parameter(s)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Forbidden:
      description: Access to the requested resource is forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Conflict:
      description: The request is conflict with the current state of the target resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'


  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message

    UserRegistrationRequest:
      type: object
      properties:
        phone:
          type: string
          example: +6281234567890
          x-oapi-codegen-extra-tags:
            validate: required,min=12,max=15,startswith=+62
        name:
          type: string
          example: Andre Febrianto
          x-oapi-codegen-extra-tags:
            validate: required,min=3,max=60
        password:
          type: string
          format: password
          x-oapi-codegen-extra-tags:
            validate: required,min=6,max=64,password
      required:
        - phone
        - name
        - password

    UserRegistrationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 9348391
      required:
        - id
    
    UserLoginRequest:
      type: object
      properties:
        phone:
          type: string
          example: +6281234567890
          x-oapi-codegen-extra-tags:
            validate: required,min=12,max=15,startswith=+62
        password:
          type: string
          format: password
          x-oapi-codegen-extra-tags:
            validate: required,min=6,max=64,password
      required:
        - phone
        - password
    
    UserLoginResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 9348391
        accessToken:
          type: string
      required:
        - id
        - accessToken

    UserUpdateRequest:
      type: object
      properties:
        phone:
          type: string
          minLength: 10
          maxLength: 13
          example: +6281234567890
        name:
          type: string
          example: Andre Febrianto
          x-oapi-codegen-extra-tags:
            validate: required,min=3,max=60
      required:
        - phone
        - name
    
    UserResponse:
      type: object
      properties:
        phone:
          type: string
          example: +6281234567890
          x-oapi-codegen-extra-tags:
            validate: required,min=12,max=15,startswith=+62
        name:
          type: string
          example: Andre Febrianto
      required:
        - phone
        - name

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
